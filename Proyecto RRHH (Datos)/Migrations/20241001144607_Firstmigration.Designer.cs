// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_RRHH__Datos_.Models;

namespace Proyecto_RRHH__Datos_.Migrations
{
    [DbContext(typeof(ProjectRRHHContext))]
    [Migration("20241001144607_Firstmigration")]
    partial class Firstmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.CandidatoCompetencias", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<int?>("Candidato")
                        .HasColumnType("int");

                    b.Property<int?>("Competencia")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Candidato");

                    b.HasIndex("Competencia");

                    b.ToTable("Candidato_Competencias");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Candidatos", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<int>("AspiracionPuesto")
                        .HasColumnName("Aspiracion puesto")
                        .HasColumnType("int");

                    b.Property<decimal>("AspiracionSalarial")
                        .HasColumnName("Aspiracion Salarial")
                        .HasColumnType("money");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Recomendado")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("AspiracionPuesto");

                    b.HasIndex("Estado");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Capacitaciones", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<int>("Candidato")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnName("Fecha_final")
                        .HasColumnType("date");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnName("Fecha_inicio")
                        .HasColumnType("date");

                    b.Property<string>("Institucion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Nivel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Candidato");

                    b.HasIndex("Nivel");

                    b.ToTable("Capacitaciones");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Competencias", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Nivel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Nivel");

                    b.ToTable("Competencias");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Departamentos", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Empleados", b =>
                {
                    b.Property<int>("CodigoEmpleador")
                        .HasColumnName("Codigo_empleador")
                        .HasColumnType("int");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnName("Fecha_Ingreso")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Puesto")
                        .HasColumnType("int");

                    b.HasKey("CodigoEmpleador");

                    b.HasIndex("Estado");

                    b.HasIndex("Puesto");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Estados", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.EstadosCandidato", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Estados candidato");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.ExperienciaLaboral", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<int?>("Candidato")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Empresa")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FechaFinal")
                        .HasColumnName("Fecha_final")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FechaInicio")
                        .HasColumnName("Fecha_inicio")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Puesto")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Salario")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("Candidato");

                    b.ToTable("Experiencia Laboral");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Idiomas", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<int?>("Nivel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Estado");

                    b.HasIndex("Nivel");

                    b.ToTable("Idiomas");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.IdiomasCandidatos", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<int>("Candidato")
                        .HasColumnType("int");

                    b.Property<int?>("Idiomas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Candidato");

                    b.HasIndex("Idiomas");

                    b.ToTable("Idiomas_Candidatos");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Niveles", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Estado")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Niveles");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.NivelesHabilidad", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Niveles_Habilidad");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Puestos", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int");

                    b.Property<int>("Departamento")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("NivelDeRiesgo")
                        .HasColumnName("Nivel de riesgo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Salario")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("Departamento");

                    b.HasIndex("Estado");

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Usuarios", b =>
                {
                    b.Property<string>("Usuario")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Candidato")
                        .HasColumnType("int");

                    b.Property<string>("Contrasena")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<int?>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Rol")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Usuario");

                    b.HasIndex("Candidato");

                    b.HasIndex("Estado");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.CandidatoCompetencias", b =>
                {
                    b.HasOne("Proyecto_RRHH__Datos_.Models.Candidatos", "CandidatoNavigation")
                        .WithMany("CandidatoCompetencias")
                        .HasForeignKey("Candidato")
                        .HasConstraintName("FK_Candidato_Competencias_Candidatos");

                    b.HasOne("Proyecto_RRHH__Datos_.Models.Competencias", "CompetenciaNavigation")
                        .WithMany("CandidatoCompetencias")
                        .HasForeignKey("Competencia")
                        .HasConstraintName("FK_Candidato_Competencias_Competencias");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Candidatos", b =>
                {
                    b.HasOne("Proyecto_RRHH__Datos_.Models.Puestos", "AspiracionPuestoNavigation")
                        .WithMany("Candidatos")
                        .HasForeignKey("AspiracionPuesto")
                        .HasConstraintName("FK_Puesto_Candidato")
                        .IsRequired();

                    b.HasOne("Proyecto_RRHH__Datos_.Models.EstadosCandidato", "EstadoNavigation")
                        .WithMany("Candidatos")
                        .HasForeignKey("Estado")
                        .HasConstraintName("FK_Estado_Candidatos");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Capacitaciones", b =>
                {
                    b.HasOne("Proyecto_RRHH__Datos_.Models.Candidatos", "CandidatoNavigation")
                        .WithMany("Capacitaciones")
                        .HasForeignKey("Candidato")
                        .HasConstraintName("FK_Candidatos_Capacitaciones")
                        .IsRequired();

                    b.HasOne("Proyecto_RRHH__Datos_.Models.Niveles", "NivelNavigation")
                        .WithMany("Capacitaciones")
                        .HasForeignKey("Nivel")
                        .HasConstraintName("FK_Nivel_Candidatos")
                        .IsRequired();
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Competencias", b =>
                {
                    b.HasOne("Proyecto_RRHH__Datos_.Models.NivelesHabilidad", "NivelNavigation")
                        .WithMany("Competencias")
                        .HasForeignKey("Nivel")
                        .HasConstraintName("FK_Competencias_Niveles_Habilidad");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Empleados", b =>
                {
                    b.HasOne("Proyecto_RRHH__Datos_.Models.Estados", "EstadoNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("Estado")
                        .HasConstraintName("FK_Empleados_Estados");

                    b.HasOne("Proyecto_RRHH__Datos_.Models.Puestos", "PuestoNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("Puesto")
                        .HasConstraintName("FK_Empleados_Puestos")
                        .IsRequired();
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.ExperienciaLaboral", b =>
                {
                    b.HasOne("Proyecto_RRHH__Datos_.Models.Candidatos", "CandidatoNavigation")
                        .WithMany("ExperienciaLaboral")
                        .HasForeignKey("Candidato")
                        .HasConstraintName("FK_Experiencia Laboral_Candidatos");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Idiomas", b =>
                {
                    b.HasOne("Proyecto_RRHH__Datos_.Models.Estados", "EstadoNavigation")
                        .WithMany("Idiomas")
                        .HasForeignKey("Estado")
                        .HasConstraintName("FK_Idiomas_Estados")
                        .IsRequired();

                    b.HasOne("Proyecto_RRHH__Datos_.Models.NivelesHabilidad", "NivelNavigation")
                        .WithMany("Idiomas")
                        .HasForeignKey("Nivel")
                        .HasConstraintName("FK_Idiomas_Niveles_Habilidad");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.IdiomasCandidatos", b =>
                {
                    b.HasOne("Proyecto_RRHH__Datos_.Models.Candidatos", "CandidatoNavigation")
                        .WithMany("IdiomasCandidatos")
                        .HasForeignKey("Candidato")
                        .HasConstraintName("FK_Idiomas_Candidatos_Candidatos")
                        .IsRequired();

                    b.HasOne("Proyecto_RRHH__Datos_.Models.Idiomas", "IdiomasNavigation")
                        .WithMany("IdiomasCandidatos")
                        .HasForeignKey("Idiomas")
                        .HasConstraintName("FK_Idiomas_Candidatos_Idiomas");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Puestos", b =>
                {
                    b.HasOne("Proyecto_RRHH__Datos_.Models.Departamentos", "DepartamentoNavigation")
                        .WithMany("Puestos")
                        .HasForeignKey("Departamento")
                        .HasConstraintName("FK_Dapartamento_Puestos")
                        .IsRequired();

                    b.HasOne("Proyecto_RRHH__Datos_.Models.Estados", "EstadoNavigation")
                        .WithMany("Puestos")
                        .HasForeignKey("Estado")
                        .HasConstraintName("FK_Estados_Puestos");
                });

            modelBuilder.Entity("Proyecto_RRHH__Datos_.Models.Usuarios", b =>
                {
                    b.HasOne("Proyecto_RRHH__Datos_.Models.Candidatos", "CandidatoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("Candidato")
                        .HasConstraintName("FK_Usuarios_Candidatos");

                    b.HasOne("Proyecto_RRHH__Datos_.Models.Estados", "EstadoNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("Estado")
                        .HasConstraintName("FK_Usuarios_Estados");
                });
#pragma warning restore 612, 618
        }
    }
}
